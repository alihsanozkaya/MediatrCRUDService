// <auto-generated />
using System;
using MediatrCRUDService.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MediatrCRUDService.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MediatrCRUDService.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 8, 19, 18, 43, 40, 597, DateTimeKind.Local).AddTicks(3428),
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 8, 19, 18, 43, 40, 597, DateTimeKind.Local).AddTicks(3440),
                            Name = "Mavi"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 8, 19, 18, 43, 40, 597, DateTimeKind.Local).AddTicks(3440),
                            Name = "Eti"
                        });
                });

            modelBuilder.Entity("MediatrCRUDService.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 8, 19, 18, 43, 40, 597, DateTimeKind.Local).AddTicks(4506),
                            Name = "Elektronik"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 8, 19, 18, 43, 40, 597, DateTimeKind.Local).AddTicks(4513),
                            Name = "Giyim"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 8, 19, 18, 43, 40, 597, DateTimeKind.Local).AddTicks(4514),
                            Name = "Yiyecek"
                        });
                });

            modelBuilder.Entity("MediatrCRUDService.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreatedAt = new DateTime(2024, 8, 19, 18, 43, 40, 598, DateTimeKind.Local).AddTicks(155),
                            Description = "Kullanıcı dostu kullanım özelliğiyle dikkatleri üzerine çeken Samsung Galaxy S24 Ultra 256 GB 12 GB Ram Kumtaşı tasarımıyla da adından sıklıkla söz ettiriyor.",
                            Price = 58999.989999999998,
                            Title = "Galaxy S24 Ultra"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            CreatedAt = new DateTime(2024, 8, 19, 18, 43, 40, 598, DateTimeKind.Local).AddTicks(163),
                            Description = "Mavi Nin Erkek Koleksiyonundan Baskılı Siyah Tişört. Loose Fit / Bol Rahat Kesim Kısa Kol",
                            Price = 369.99000000000001,
                            Title = "Baskılı Siyah Tişört"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            CreatedAt = new DateTime(2024, 8, 19, 18, 43, 40, 598, DateTimeKind.Local).AddTicks(164),
                            Description = "Şeker ilavesiz. Doğal lif kaynağı.",
                            Price = 17.5,
                            Title = "Lifalif Kuru Meyveli Yulaf Bar"
                        });
                });

            modelBuilder.Entity("MediatrCRUDService.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("MediatrCRUDService.Domain.Entities.Product", b =>
                {
                    b.HasOne("MediatrCRUDService.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("MediatrCRUDService.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("MediatrCRUDService.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MediatrCRUDService.Domain.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MediatrCRUDService.Domain.Entities.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("MediatrCRUDService.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
