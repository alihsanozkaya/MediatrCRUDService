// <auto-generated />
using System;
using MediatrCRUDService.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MediatrCRUDService.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240820132452_Update2")]
    partial class Update2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MediatrCRUDService.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7163),
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7177),
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7178),
                            Name = "Asus"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7179),
                            Name = "Mavi"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7180),
                            Name = "Koton"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7180),
                            Name = "Zara"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7181),
                            Name = "Karaca"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7181),
                            Name = "Yataş"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7182),
                            Name = "English Home"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7183),
                            Name = "Bürotime"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7183),
                            Name = "Bürosit"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7184),
                            Name = "Adidas"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7185),
                            Name = "Nike"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7185),
                            Name = "Decathlon"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7186),
                            Name = "LEGO"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7186),
                            Name = "Hot Wheels"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7187),
                            Name = "Faber Castell"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7188),
                            Name = "Gıpta"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7188),
                            Name = "Scrikss"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7189),
                            Name = "Avon"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7190),
                            Name = "Yves Rocher"
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7190),
                            Name = "Nivea"
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7191),
                            Name = "Eti"
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7191),
                            Name = "Sütaş"
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(7192),
                            Name = "Çaykur"
                        });
                });

            modelBuilder.Entity("MediatrCRUDService.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(8588),
                            Name = "Elektronik"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(8591),
                            Name = "Moda"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(8591),
                            Name = "Ev"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(8592),
                            Name = "Ofis"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(8593),
                            Name = "Spor"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(8593),
                            Name = "Oyuncak"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(8594),
                            Name = "Kırtasiye"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(8594),
                            Name = "Kozmetik"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 0, DateTimeKind.Local).AddTicks(8595),
                            Name = "Gıda"
                        });
                });

            modelBuilder.Entity("MediatrCRUDService.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 1, DateTimeKind.Local).AddTicks(4501),
                            Description = "Kullanıcı dostu kullanım özelliğiyle dikkatleri üzerine çeken Samsung Galaxy S24 Ultra 256 GB 12 GB Ram Kumtaşı tasarımıyla da adından sıklıkla söz ettiriyor.",
                            Price = 58999.989999999998,
                            Title = "Galaxy S24 Ultra"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 4,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 1, DateTimeKind.Local).AddTicks(4509),
                            Description = "Mavi Nin Denim Koleksiyonundan Barcelona Kolej Buz Mavi Jean Pantolon",
                            Price = 699.99000000000001,
                            Title = "Barcelona Kolej Buz Mavi Jean Pantolon"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 9,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 1, DateTimeKind.Local).AddTicks(4510),
                            Description = "Floral Slice Pike Takımı 150x220 cm Yeşil",
                            Price = 849.99000000000001,
                            Title = "Floral Slice Tek Kişilik Pike Takımı Yeşil"
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 10,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 1, DateTimeKind.Local).AddTicks(4511),
                            Description = "Çalışma koltuğu",
                            Price = 6776.0,
                            Title = "Comfy Başlıklı Çalışma Koltuğu"
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 12,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 1, DateTimeKind.Local).AddTicks(4512),
                            Description = "BENZERSİZ BİR GEÇMİŞE SAHİP, EL DİKİŞLİ FUTBOL TOPU",
                            Price = 819.0,
                            Title = "Tango Rosario El Dikişli Fifa Onaylı Deri Futbol Topu"
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 16,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 1, DateTimeKind.Local).AddTicks(4513),
                            Description = "Hot Wheels Fast & Furious Volkswagen Jetta MK3 HRW44",
                            Price = 259.5,
                            Title = "Fast & Furious Volkswagen Jetta"
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 17,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 1, DateTimeKind.Local).AddTicks(4514),
                            Description = "2022 Grip 1347 Versatil Kalem 0.7 mm Petrol Yeşili",
                            Price = 260.0,
                            Title = "2022 Grip 1347 Versatil Kalem"
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 21,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 1, DateTimeKind.Local).AddTicks(4515),
                            Description = "Gözenekleri derinlemesine arındıran yüz yıkama jeli, ferahlık veren organik nane ve jel dokusu sayesinde cildi kurutmadan temizler ve gözenekleri kirden arındırır.",
                            Price = 450.0,
                            Title = "Karma Ve Yağlı Ciltler Için Pure Menthe Prebiyotik Yüz Yıkama Jeli-390 ml"
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 23,
                            CreatedAt = new DateTime(2024, 8, 20, 16, 24, 52, 1, DateTimeKind.Local).AddTicks(4516),
                            Description = "Şeker ilavesiz. Doğal lif kaynağı.",
                            Price = 17.5,
                            Title = "Lifalif Kuru Meyveli Yulaf Bar"
                        });
                });

            modelBuilder.Entity("MediatrCRUDService.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 8
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 9
                        });
                });

            modelBuilder.Entity("MediatrCRUDService.Domain.Entities.Product", b =>
                {
                    b.HasOne("MediatrCRUDService.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("MediatrCRUDService.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("MediatrCRUDService.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MediatrCRUDService.Domain.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MediatrCRUDService.Domain.Entities.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("MediatrCRUDService.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
